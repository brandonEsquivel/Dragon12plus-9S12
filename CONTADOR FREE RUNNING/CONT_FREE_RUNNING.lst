
as12, an absolute assembler for Motorola MCU's, version 1.2h

                        ;----------------------------------------------------------------------------
                        ;                Contador en free running con delay
                        ;                EIE, UCR
                        ;                Brandon Esquivel Molina
                        ;                brandon.esquivel@ucr.ac.cr
                        ;                LLamado a subrutinas y manejo de pila
                        ;
                        ;	realiza un free running desde cero hasta CUENTA y de regreso,
                        ; sin detenerse, se implementa un delay para poder apreciar el valor
                        ; incrementandose, se utilizan dos subrutinas para la implementacion
                        ;
                        ;--------------------------------------------------------------------------
                        ;                Declaracion de estructuras de datos
                        ;--------------------------------------------------------------------------
1000                    DATA    	EQU  $1000     ;etiquetas de valores fijos
1100                    PROG    	EQU  $1100
1200                    sr_DELAY 	EQU $1200
1300                    sr_BIN_BCD 	EQU $1300
3c00                    PILA    	EQU $3C00
0019                    VALI            EQU $19      ; estos valores son parametros para el delay
0022                    VALM            EQU $22      ; donde el delay = retardo(NOP) x VALI x VALM x VALE
000f                    VALE            EQU $0F
                        
1000                    		org DATA
1000                    CONT_BIN        ds $1       ; Contador ascendente o decreciente segun modo de operacion
1001                    BCD_H           ds $1       ; valor de los dos nibbles superiores del numero BCD a mostrar
1002                    BCD_L           ds $1       ; valor de los dos nibbles inferiores del numero BCD a mostrar
1003 0c                 CUENTA          db 12       ; valor final de cuenta, admite cuenta hasta de 3 digitos
1004                    INCRE           ds $1       ; bandera de modo de operacion, 1 para Up, 0 para Down
1005                    LAZO_INT       ds $1        ; valores de control de lazos del delay
1006                    LAZO_MED       ds $1
1007                    LAZO_EXT       ds $1
                        ;--------------------------------------------------------------------------
                        ;                Programa Principal
                        ;--------------------------------------------------------------------------
1100                                    org PROG
1100 18 03 00 00 10 00          movw #$0000,CONT_BIN    ; se inicializa el contador en cero
1106 18 0b 01 10 04             movb #$01,INCRE         ; Se carga en la bandera de modo el modo 1 (incremental)
110b cf 3c 00                   lds #PILA               ; Se inicialzia la PILA
                        
                                
110e ce 10 04           next:   ldx #INCRE              ; bucle principal, se analiza el modo de operacion
1111 0e 00 01 0b        	brset 0,X,$01,UP
                        
1115 b6 10 00           Down:   ldaa CONT_BIN           ; modo descendente, se carga el valor actual del contador
1118 04 20 10           	dbne A,apilar           ; Se decrementa si no es cero
111b 7a 10 00                   staa CONT_BIN           ; Se guarda el ultimo valor rpocesado
111e 20 28              	bra  cambio             ; Se llego a limite, se procede a cambiar de modo ;
                        
1120 72 10 00           UP:     inc CONT_BIN            ; modo ascendente, se incrementa el contador
1123 b6 10 00                   ldaa CONT_BIN           ; se analiza para determianr si llego al limite de cuenta indicado
1126 b1 10 03                   cmpa CUENTA
1129 24 1d                      bhs  cambio
                                
112b                    apilar:                        ; proceso de llamado a funciones de conversion a bcd y delay
112b 7a 10 00                  staa CONT_BIN
112e 36                        psha                    ; Se apila el valor para pasarselo a bin_bcd
112f 16 13 00                  jsr BIN_BCD             ; llamada a subrutina
1132 1b 81                     leas 1,sp               ; se reestablece el puntero de pila
1134 18 0b 19 10 05            movb #VALI,LAZO_INT     ; se recargan los valores de lazo delay  para pasarselos por memoria a la subrutina
1139 18 0b 22 10 06            movb #VALM,LAZO_MED
113e 18 0b 0f 10 07            movb #VALE,LAZO_EXT
1143 16 12 00                  jsr Delay               ; Se llama a subrutina Delay
1146 20 c6                     bra next                ; Siguiente iteracion
                               
1148                    cambio:
1148 b6 10 04           	ldaa INCRE             ; Se realiza el cambio de modo ;
114b 41                 	coma                   ; Se obtiene el complemento a uno de todo el byte               ;
114c 84 01              	anda #$01              ; Se obtiene solo el primer bit, bit bandera de modo                ;
114e 7a 10 04           	staa INCRE             ; Se almacena ya con toggle                                                                   ;
1151 b6 10 00                   ldaa CONT_BIN          ; se reestablece el valor del contador actual
1154 20 d5              	bra apilar             ; siguiente paso
                        ;--------------------------------------------------------------------------
                        ;                Subrutinas
                        ;--------------------------------------------------------------------------
1300                                            ORG sr_BIN_BCD
1300                    BIN_BCD:
1300 1b 82                      leas 2,SP       ; Se devuelve el puntero de pila dos posiciones, saltandose la EA de retorno apilada
1302 86 00                      ldaa #0         ; limpia acum A
1304 33                 	pulb            ; se desapila en b el valor de cont_bin apilado para su conversion ;
1305 cd 10 01           	ldy #BCD_H	; Y = apuntando a la primer posicion de BCD_H ;
1308 ce 00 0a                   ldx #10         ; X = 10
130b 18 10                      idiv            ; D/X  V->X, R->D
130d 6b 41                      stab 1,Y        ; guardando el digito menos significativo en BCD_L
130f b7 c5                      xgdx            ; se intercambian valores, nueva division
1311 ce 00 0a                   ldx #10         ; x=10
1314 18 10                      idiv            ; Segunda division
1316 58                         lslb            ; Se obtuvo el siguiente digito, pero se desplaza al nibble superior de BCD_H para una correcta visualizacion natural
1317 58                         lslb
1318 58                         lslb
1319 58                         lslb
131a eb 41                      addb 1,Y        ; Se suman los dos valores anteriores, dos digitos en BCD_L
131c 6b 41              	stab 1,Y        ; guardando el segundo digito + LSD
131e b7 c5                      xgdx            ; se intercambian valores, nueva division
1320 ce 00 0a                   ldx #10         ; x=10
1323 18 10                      idiv            ; tercera division, DIGITO MAS SIGNIFICATIVO, OJO LIMITADO A 3 DIGITOS
1325 6b 40                      stab 0,Y        ; salvando el digito MS
1327 1b 9d                      leas -3,SP      ; Se reestablece el puntero de pila hacia la EA de retorno
1329 3d                         rts             ; retorno
                        
1200                                    ORG sr_DELAY
1200                    Delay:
1200 18 0b 0f 10 07             movb #VALE,LAZO_EXT
1205                    LazoE:
1205 18 0b 22 10 06             movb #VALM,LAZO_MED
120a                    LazoM:
120a 18 0b 19 10 05              movb #VALI,LAZO_INT
120f                    LazoI:
120f a7                         NOP
1210 a7                         NOP
1211 a7                         NOP
1212 a7                 	NOP
1213 a7                 	NOP
1214 a7                         NOP
1215 a7                         NOP
1216 a7                 	NOP
1217 a7                 	NOP
1218 a7                         NOP
1219 a7                         NOP
121a a7                 	NOP
121b a7                 	NOP
121c a7                         NOP
                                
121d 73 10 05                   DEC LAZO_INT
1220 b6 10 05                   ldaa LAZO_INT
1223 81 01                      cmpa #1
1225 24 e8                      bhs LAZOI
                                
1227 73 10 06                   DEC LAZO_MED
122a b6 10 06                   ldaa LAZO_MED
122d 81 01                      cmpa #1
122f 24 d9                      bhs LazoM
                                
1231 73 10 07                   DEC LAZO_EXT
1234 b6 10 07                   ldaa LAZO_EXT
1237 81 01                      cmpa #1
1239 24 ca                      bhs LazoE
                                
123b 3d                 	rts            ; retorno, no se apilo nada, por lo que no hay que manipular el puntero de pila;

Executed: Wed May 26 20:46:00 2021
Total cycles: 229, Total bytes: 189
Total errors: 0, Total warnings: 0
